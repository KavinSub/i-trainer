<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Input name="ready" type="0" type_size="1" nature="4" stm_value_name="ready" inner="1" tooltip="ready desc" id="4" />
        <Input name="training/song" type="0" type_size="1" nature="4" stm_value_name="training/song" inner="1" tooltip="training/song desc" id="5" />
        <Input name="training/disco" type="0" type_size="1" nature="4" stm_value_name="training/disco" inner="1" tooltip="training/disco desc" id="6" />
        <Input name="training/timer" type="0" type_size="1" nature="4" stm_value_name="training/timer" inner="1" tooltip="training/timer desc" id="7" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="8" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="100">
                        <Box name="Show App" id="2" localization="8" tooltip="Loads the application on the tablet, if it exists, and displays the webview.&#x0A;&#x0A;V1.0.0&#x0A;" x="328" y="97">
                            <bitmap>media/images/box/root.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.isRunning = False
        self.frameManager = None
        try:
            self.frameManager = ALProxy("ALFrameManager")
        except Exception as e:
            self.logger.error(e)

    def onUnload(self):
        self.isRunning = False

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAppName(self):
        import os
        if self.frameManager:
            behaviorPath = os.path.normpath(self.frameManager.getBehaviorPath(self.behaviorId))
            if os.path.isdir(behaviorPath):
               behaviorPath = os.path.join(behaviorPath, "")
            appsFolderFragment = os.path.join("PackageManager", "apps")
            if not (appsFolderFragment in behaviorPath):
                    self.logger.error("appsFolderFragment is not in behaviorPath")
                    return None
            fragment = behaviorPath.split(appsFolderFragment, 1)[1]
            return fragment.lstrip("\\/")
        else:
            self.logger.warning("No ALFrameManager")
            return None

    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        appName = self._getAppName()
        state = False
        if appName:
            if tabletService:
                if tabletService.loadApplication(appName):
                    self.logger.info("Successfully set application: %s" % appName)
                    tabletService.showWebview()
                    state = True
                else:
                    self.logger.warning("Got tablet service, but failed to set application: %s" % appName)
            else:
                self.logger.warning("Couldn't find tablet service, so can't set application: %s" % appName)
        if state:
            self.onSuccess()
        else:
            self.onFailure()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished successfully." id="3" />
                            <Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished unsuccessfully." id="4" />
                        </Box>
                        <Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="93" y="166">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/html/music/gymmusic.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="40" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                            </Box>
                                            <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Audio player" type="Lock" timeout="0" />
                        </Box>
                        <Box name="dialogue" id="3" localization="8" tooltip="An example of multilanguage dialog implementation" x="337" y="219">
                            <dialogFile>dialogue/dialogue.dlg</dialogFile>
                            <bitmap>media/images/box/box-dialog.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Output name="playAGame" type="1" type_size="1" nature="2" inner="0" tooltip="stimulated using $playAGame=1 in qiChat script when User wants to play a game&#x0A;" id="5" />
                            <Resource name="Speech" type="Lock" timeout="0" />
                            <Resource name="Speech recognition" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Headbang" id="5" localization="8" tooltip="ID : #04B 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags :&#x0A;- Headbang" x="91" y="290">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="301">
                                <BehaviorLayer name="behavior_layer1" mute="1">
                                    <BehaviorKeyframe name="keyframe1_copy" index="1">
                                        <Diagram>
                                            <Box name="mischievous" id="1" localization="8" tooltip="mischievous" x="97" y="36">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bMustStop = False;
        self.bIsRunning = False;

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self):
        if( self.bIsRunning ):

            return;

        rDuration = 0.3;
        self.bMustStop = False;
        self.bIsRunning = True;

        while( not self.bMustStop ):
            ALLeds.post.fadeRGB( "FaceLed0", 0x060033, rDuration );
            ALLeds.post.fadeRGB( "FaceLed1", 0xf33300, rDuration );
            ALLeds.post.fadeRGB( "FaceLed2", 0xff3300, rDuration );
            ALLeds.post.fadeRGB( "FaceLed3", 0x701a00, rDuration );
            ALLeds.post.fadeRGB( "FaceLed4", 0xff1a00, rDuration );
            ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed6", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rDuration );

            #time.sleep( 0.1 );

            ALLeds.post.fadeRGB( "FaceLed0", 0x140000, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed1", 0xff3300, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed2", 0xff0033, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed3", 0xf51a00, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed4", 0xff1a00, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed5", 0xff0033, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed6", 0x7c0000, rDuration*3 );
            ALLeds.fadeRGB( "FaceLed7", 0x260000, rDuration*3 );

            if( self.bMustStop ):
                break;

        self.bIsRunning = False;
        self.onStopped();

    def onInput_onStop(self):
        self.bMustStop = True;]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="behavior_layer2">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Move Along" id="3" localization="8" tooltip="Move along a trajectory given by an attached .pmt file.&#x0A;&#x0A;V1.0.0&#x0A;" x="381" y="274">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        self.navigation = ALProxy("ALNavigation")

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.move(0., 0., 0.)

    def onInput_onStart(self):
        relativePath = self.getParameter("Planar Move Trajectory")
        if len(relativePath) == 0:
            self.failure()
            return

        fm = ALProxy("ALFrameManager")
        behaviorPath = fm.getBehaviorPath(self.behaviorId)
        trajectoryPath = behaviorPath + relativePath

        trajectoryData = str()
        with open(trajectoryPath, 'r') as trajectoryFile:
            trajectoryData = trajectoryFile.read()
        trajectory = eval(trajectoryData)

        if trajectory[0] != "Composed": # dealing with trajectories with radius
            trajectory = trajectory[0]

        result = self.navigation.moveAlong(trajectory)
        if (result):
            self.success()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the trajectory was correctly executed." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the trajectory was stopped to avoid collisions." id="5" />
                                                <Parameter name="Planar Move Trajectory" inherits_from_parent="0" content_type="4" value="/movearound.pmt" default_value="" tooltip="" id="6" />
                                            </Box>
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="14" value="-12.3072" />
                                        <Key frame="23" value="12.4782" />
                                        <Key frame="36" value="-17.9323" />
                                        <Key frame="50" value="11.7751" />
                                        <Key frame="67" value="-17.7565" />
                                        <Key frame="80" value="10.6325" />
                                        <Key frame="94" value="-10.6373" />
                                        <Key frame="112" value="18.1033" />
                                        <Key frame="128" value="-13.8893" />
                                        <Key frame="145" value="12.5661" />
                                        <Key frame="161" value="-19.9538" />
                                        <Key frame="179" value="13.5329" />
                                        <Key frame="195" value="-18.3718" />
                                        <Key frame="212" value="14.8898" />
                                        <Key frame="221" value="-22.4847" />
                                        <Key frame="229" value="4.80263" />
                                        <Key frame="238" value="-15.0151" />
                                        <Key frame="246" value="3.78123" />
                                        <Key frame="253" value="-11.9858" />
                                        <Key frame="261" value="4.55645" />
                                        <Key frame="268" value="-5.32874" />
                                        <Key frame="278" value="11.5304" />
                                        <Key frame="290" value="8.81216" />
                                        <Key frame="301" value="-10.1978" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="14" value="-4.92434" />
                                        <Key frame="23" value="-4.57277" />
                                        <Key frame="36" value="-3.86964" />
                                        <Key frame="50" value="-5.53958" />
                                        <Key frame="67" value="-3.16651" />
                                        <Key frame="80" value="-1.76024" />
                                        <Key frame="94" value="-1.23289" />
                                        <Key frame="112" value="-3.34229" />
                                        <Key frame="128" value="-1.145" />
                                        <Key frame="145" value="-2.55126" />
                                        <Key frame="161" value="-3.2544" />
                                        <Key frame="179" value="-3.95753" />
                                        <Key frame="195" value="-5.89115" />
                                        <Key frame="212" value="-11.1647" />
                                        <Key frame="221" value="-9.49471" />
                                        <Key frame="229" value="-4.3091" />
                                        <Key frame="238" value="-0.705538" />
                                        <Key frame="246" value="-0.00240423" />
                                        <Key frame="253" value="-1.84813" />
                                        <Key frame="261" value="-2.46337" />
                                        <Key frame="268" value="-3.16651" />
                                        <Key frame="278" value="1.84332" />
                                        <Key frame="301" value="-0.090296" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                                        <Key frame="22" value="-25.7409" />
                                        <Key frame="35" value="-10.3033" />
                                        <Key frame="49" value="-25.7409" />
                                        <Key frame="66" value="-10.3033" />
                                        <Key frame="79" value="-25.7409" />
                                        <Key frame="93" value="-10.3033" />
                                        <Key frame="111" value="-19.581" />
                                        <Key frame="127" value="-10.3033" />
                                        <Key frame="144" value="-14.961" />
                                        <Key frame="160" value="-10.3033" />
                                        <Key frame="178" value="-14.961" />
                                        <Key frame="194" value="-10.3033" />
                                        <Key frame="211" value="-14.961" />
                                        <Key frame="245" value="-10.3033" />
                                        <Key frame="277" value="-25.7409" />
                                        <Key frame="290" value="-10.3033" />
                                        <Key frame="300" value="-2.57699" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                                        <Key frame="22" value="0" />
                                        <Key frame="35" value="0" />
                                        <Key frame="49" value="0" />
                                        <Key frame="66" value="0" />
                                        <Key frame="79" value="0" />
                                        <Key frame="93" value="0" />
                                        <Key frame="111" value="0" />
                                        <Key frame="127" value="0" />
                                        <Key frame="144" value="0" />
                                        <Key frame="160" value="0" />
                                        <Key frame="178" value="0" />
                                        <Key frame="194" value="0" />
                                        <Key frame="211" value="0" />
                                        <Key frame="245" value="0" />
                                        <Key frame="277" value="0" />
                                        <Key frame="290" value="0" />
                                        <Key frame="300" value="-0.00165662" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                                        <Key frame="22" value="14.0637" />
                                        <Key frame="35" value="4.14042" />
                                        <Key frame="49" value="14.0637" />
                                        <Key frame="66" value="4.14042" />
                                        <Key frame="79" value="14.0637" />
                                        <Key frame="93" value="4.14042" />
                                        <Key frame="111" value="12.5237" />
                                        <Key frame="127" value="4.14042" />
                                        <Key frame="144" value="9.44376" />
                                        <Key frame="160" value="4.14042" />
                                        <Key frame="178" value="9.44376" />
                                        <Key frame="194" value="4.14042" />
                                        <Key frame="211" value="9.44376" />
                                        <Key frame="245" value="4.14042" />
                                        <Key frame="277" value="14.0637" />
                                        <Key frame="290" value="4.14042" />
                                        <Key frame="300" value="-0.638153" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="20" value="-29.8808" />
                                        <Key frame="33" value="-29.7929" />
                                        <Key frame="47" value="-36.209" />
                                        <Key frame="64" value="-31.3749" />
                                        <Key frame="77" value="-31.8144" />
                                        <Key frame="91" value="-56.9514" />
                                        <Key frame="109" value="-56.4" />
                                        <Key frame="125" value="-78.8413" />
                                        <Key frame="142" value="-40.0762" />
                                        <Key frame="158" value="-88.5925" />
                                        <Key frame="176" value="-29.0019" />
                                        <Key frame="192" value="-88.5925" />
                                        <Key frame="209" value="-58.5335" />
                                        <Key frame="226" value="-66.0043" />
                                        <Key frame="243" value="-68.9047" />
                                        <Key frame="258" value="-53.6994" />
                                        <Key frame="275" value="-72.0688" />
                                        <Key frame="298" value="-33.8359" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="20" value="-88.3336" />
                                        <Key frame="33" value="-98.2654" />
                                        <Key frame="47" value="-102.748" />
                                        <Key frame="64" value="-104.242" />
                                        <Key frame="77" value="-95.3649" />
                                        <Key frame="91" value="-45.8" />
                                        <Key frame="109" value="-49.837" />
                                        <Key frame="125" value="-25.662" />
                                        <Key frame="142" value="-33.7528" />
                                        <Key frame="158" value="-80.0718" />
                                        <Key frame="176" value="-28.1278" />
                                        <Key frame="192" value="-80.0718" />
                                        <Key frame="209" value="-66.5364" />
                                        <Key frame="226" value="-53.88" />
                                        <Key frame="243" value="-53.5285" />
                                        <Key frame="258" value="-51.7706" />
                                        <Key frame="275" value="-45.3545" />
                                        <Key frame="298" value="-69.7005" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="20" value="0.230571" />
                                        <Key frame="33" value="0.230935" />
                                        <Key frame="64" value="0.230935" />
                                        <Key frame="91" value="0.224389" />
                                        <Key frame="109" value="0.618182" />
                                        <Key frame="125" value="0.45" />
                                        <Key frame="142" value="0.83" />
                                        <Key frame="158" value="0.43" />
                                        <Key frame="176" value="0.91" />
                                        <Key frame="192" value="0.51" />
                                        <Key frame="209" value="0.688387" />
                                        <Key frame="226" value="0.6992" />
                                        <Key frame="243" value="0.6992" />
                                        <Key frame="275" value="0.684" />
                                        <Key frame="298" value="0.232025" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="20" value="97.2937" />
                                        <Key frame="33" value="96.8543" />
                                        <Key frame="47" value="90.5261" />
                                        <Key frame="64" value="95.9754" />
                                        <Key frame="77" value="92.1081" />
                                        <Key frame="91" value="50.4" />
                                        <Key frame="109" value="-27.8" />
                                        <Key frame="125" value="-65.0375" />
                                        <Key frame="142" value="-41.2236" />
                                        <Key frame="158" value="-23.5574" />
                                        <Key frame="176" value="-54.7589" />
                                        <Key frame="192" value="-23.5574" />
                                        <Key frame="209" value="47.3" />
                                        <Key frame="226" value="76.7271" />
                                        <Key frame="243" value="82.44" />
                                        <Key frame="258" value="87.0983" />
                                        <Key frame="275" value="78.6607" />
                                        <Key frame="298" value="91.4929" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="20" value="9.84147" />
                                        <Key frame="33" value="10.0173" />
                                        <Key frame="47" value="6.85315" />
                                        <Key frame="64" value="7.02893" />
                                        <Key frame="77" value="6.41369" />
                                        <Key frame="91" value="26.2" />
                                        <Key frame="109" value="15.2" />
                                        <Key frame="125" value="58.1867" />
                                        <Key frame="142" value="24.2557" />
                                        <Key frame="158" value="64.4222" />
                                        <Key frame="176" value="11.072" />
                                        <Key frame="192" value="64.4222" />
                                        <Key frame="209" value="21.0916" />
                                        <Key frame="226" value="23.6405" />
                                        <Key frame="243" value="23.8163" />
                                        <Key frame="258" value="20.8279" />
                                        <Key frame="275" value="23.6405" />
                                        <Key frame="298" value="10.0173" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="20" value="5.44688" />
                                        <Key frame="33" value="5.53477" />
                                        <Key frame="64" value="5.44688" />
                                        <Key frame="91" value="12.7" />
                                        <Key frame="109" value="33" />
                                        <Key frame="125" value="7.91266" />
                                        <Key frame="142" value="18" />
                                        <Key frame="176" value="18.2791" />
                                        <Key frame="209" value="16.1697" />
                                        <Key frame="226" value="-15.8229" />
                                        <Key frame="243" value="-10.8131" />
                                        <Key frame="275" value="2.45857" />
                                        <Key frame="298" value="6.67737" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="21" value="56.9562" />
                                        <Key frame="34" value="86.5758" />
                                        <Key frame="48" value="50.3644" />
                                        <Key frame="65" value="89.5" />
                                        <Key frame="78" value="59.593" />
                                        <Key frame="92" value="89.5" />
                                        <Key frame="110" value="33.2255" />
                                        <Key frame="126" value="78.8413" />
                                        <Key frame="143" value="34.8075" />
                                        <Key frame="159" value="83.4995" />
                                        <Key frame="177" value="34.7196" />
                                        <Key frame="193" value="88.773" />
                                        <Key frame="210" value="38.7627" />
                                        <Key frame="227" value="51.1554" />
                                        <Key frame="244" value="57.3957" />
                                        <Key frame="259" value="45.7061" />
                                        <Key frame="276" value="65.0423" />
                                        <Key frame="299" value="25.2273" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="12" value="39.1" />
                                        <Key frame="21" value="10.2809" />
                                        <Key frame="34" value="31.3749" />
                                        <Key frame="48" value="10.7204" />
                                        <Key frame="65" value="31.9023" />
                                        <Key frame="78" value="18.5428" />
                                        <Key frame="92" value="31.2871" />
                                        <Key frame="110" value="11.6872" />
                                        <Key frame="126" value="25.662" />
                                        <Key frame="143" value="15.0271" />
                                        <Key frame="159" value="38.4942" />
                                        <Key frame="177" value="20.4764" />
                                        <Key frame="193" value="93.3386" />
                                        <Key frame="210" value="5.35899" />
                                        <Key frame="227" value="25.8378" />
                                        <Key frame="244" value="26.7167" />
                                        <Key frame="259" value="29.4413" />
                                        <Key frame="276" value="36.6484" />
                                        <Key frame="299" value="67.2348" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="12" value="0.57" />
                                        <Key frame="21" value="0.745455" />
                                        <Key frame="34" value="0.26" />
                                        <Key frame="48" value="0.82" />
                                        <Key frame="65" value="0.514873" />
                                        <Key frame="78" value="0.78" />
                                        <Key frame="92" value="0.3" />
                                        <Key frame="110" value="0.81" />
                                        <Key frame="126" value="0.45" />
                                        <Key frame="143" value="0.83" />
                                        <Key frame="159" value="0.43" />
                                        <Key frame="177" value="0.91" />
                                        <Key frame="193" value="0.51" />
                                        <Key frame="210" value="0.514873" />
                                        <Key frame="227" value="0.6944" />
                                        <Key frame="244" value="0.7988" />
                                        <Key frame="276" value="0.5424" />
                                        <Key frame="299" value="0.410207" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="21" value="-46.3165" />
                                        <Key frame="34" value="-64.7738" />
                                        <Key frame="48" value="-44.5587" />
                                        <Key frame="65" value="-44.7345" />
                                        <Key frame="78" value="-48.6017" />
                                        <Key frame="92" value="-49.217" />
                                        <Key frame="110" value="-64.6859" />
                                        <Key frame="126" value="-65.0375" />
                                        <Key frame="143" value="-50.4474" />
                                        <Key frame="159" value="-57.9182" />
                                        <Key frame="177" value="-55.6331" />
                                        <Key frame="193" value="9.05525" />
                                        <Key frame="210" value="18.3718" />
                                        <Key frame="227" value="60.2082" />
                                        <Key frame="244" value="66.6243" />
                                        <Key frame="259" value="70.4037" />
                                        <Key frame="276" value="70.931" />
                                        <Key frame="299" value="84.9937" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="21" value="-34.5438" />
                                        <Key frame="34" value="-73.6557" />
                                        <Key frame="48" value="-31.2919" />
                                        <Key frame="65" value="-74.7983" />
                                        <Key frame="78" value="-30.2372" />
                                        <Key frame="92" value="-80.4233" />
                                        <Key frame="110" value="-13.1862" />
                                        <Key frame="126" value="-58.1867" />
                                        <Key frame="143" value="-22.1511" />
                                        <Key frame="159" value="-77.2592" />
                                        <Key frame="177" value="-18.7233" />
                                        <Key frame="193" value="-51.5948" />
                                        <Key frame="210" value="-11.7799" />
                                        <Key frame="227" value="-20.7449" />
                                        <Key frame="244" value="-23.8211" />
                                        <Key frame="259" value="-20.1296" />
                                        <Key frame="276" value="-21.2722" />
                                        <Key frame="299" value="-7.03374" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="12" value="-10.7" />
                                        <Key frame="21" value="-7" />
                                        <Key frame="34" value="-6.85796" />
                                        <Key frame="65" value="-6.85796" />
                                        <Key frame="92" value="-7.4732" />
                                        <Key frame="126" value="-7.91266" />
                                        <Key frame="143" value="-8.00055" />
                                        <Key frame="177" value="-8.35212" />
                                        <Key frame="210" value="-12.9225" />
                                        <Key frame="227" value="37.9668" />
                                        <Key frame="244" value="30.3202" />
                                        <Key frame="276" value="5.00743" />
                                        <Key frame="299" value="9.22623" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="99" y="476">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Say" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="395" y="470">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : " مرحبا ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Come on Ryan! You can do it ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : " 你好 "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <arabic>
                                                        <![CDATA[مرحبا]]>
</arabic>
                                                    <czech>
                                                        <![CDATA[Ahoj]]>
</czech>
                                                    <danish>
                                                        <![CDATA[Hej]]>
</danish>
                                                    <german>
                                                        <![CDATA[Hallo]]>
</german>
                                                    <greek>
                                                        <![CDATA[]]>
</greek>
                                                    <english>
                                                        <![CDATA[Come on Ryan! You can do it]]>
</english>
                                                    <spanish>
                                                        <![CDATA[Hola]]>
</spanish>
                                                    <finnish>
                                                        <![CDATA[Hei]]>
</finnish>
                                                    <french>
                                                        <![CDATA[Bonjour]]>
</french>
                                                    <italian>
                                                        <![CDATA[Ciao]]>
</italian>
                                                    <japanese>
                                                        <![CDATA[こんにちは]]>
</japanese>
                                                    <korean>
                                                        <![CDATA[안녕하세요]]>
</korean>
                                                    <dutch>
                                                        <![CDATA[Hallo]]>
</dutch>
                                                    <norwegian>
                                                        <![CDATA[]]>
</norwegian>
                                                    <polish>
                                                        <![CDATA[Cześć]]>
</polish>
                                                    <brazilian>
                                                        <![CDATA[Olá]]>
</brazilian>
                                                    <portuguese>
                                                        <![CDATA[Olá]]>
</portuguese>
                                                    <russian>
                                                        <![CDATA[Привет]]>
</russian>
                                                    <swedish>
                                                        <![CDATA[Hallå]]>
</swedish>
                                                    <turkish>
                                                        <![CDATA[Merhaba]]>
</turkish>
                                                    <chinese>
                                                        <![CDATA[你好]]>
</chinese>
                                                    <language>5</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Speech" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Raise Event" id="7" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="230" y="400">
                            <bitmap>media/images/box/sensors/STM.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), 1)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" />
                            <Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" />
                            <Parameter name="key" inherits_from_parent="0" content_type="3" value="trainer/toolate" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="0" indexofinput="8" outputowner="2" indexofoutput="4" />
                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="5" />
                        <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="6" />
                        <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="7" />
                        <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
